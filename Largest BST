int sizeBST(Node *root)
{
    if (root == 0)
    {
        return 0;
    }

    return 1 + sizeBST(root->left) + sizeBST(root->right);
}

bool isBST(Node *root, int mn, int mx)
{
    if (root == NULL)
    {
        return true;
    }

    if (root->data <= mn or root->data >= mx)
    {
        return false;
    }

    if (isBST(root->left, mn, root->data) and isBST(root->right, root->data, mx))
    {
        return true;
    }

    return false;
}

int largestBst(Node *root)
{
    if (!root)
    {
        return 0;
    }

    if (isBST(root, INT_MIN, INT_MAX))
    {
        return sizeBST(root);
    }

    return max(largestBst(root->left), largestBst(root->right));
}
